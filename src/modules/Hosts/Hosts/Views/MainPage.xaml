<Page
    x:Class="Hosts.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Hosts.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    Loaded="Page_Loaded">
    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.ReadHostsCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Page.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="TrueToVisibleConverter" />
        <converters:BoolToVisibilityConverter x:Key="FalseToVisibleConverter" TrueValue="Collapsed" FalseValue="Visible" />
    </Page.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <AppBarButton Grid.Row="0"
                      Icon="Filter"
                      IsCompact="True"
                      ToolTipService.ToolTip="Filter"
                      AutomationProperties.Name="Filter"
                      AllowFocusOnInteraction="True">
            <AppBarButton.Flyout>
                <Flyout>
                    <StackPanel Width="200"
                                Spacing="32"
                                HorizontalAlignment="Stretch">
                        <AutoSuggestBox x:Uid="AddressFilter"
                                        PlaceholderText=""
                                        QueryIcon="Find"
                                        Text="{x:Bind ViewModel.AddressFilter, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="TextChanged">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                        <AutoSuggestBox x:Uid="HostsFilter"
                                        QueryIcon="Find"
                                        Text="{x:Bind ViewModel.HostsFilter, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="TextChanged">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                        <AutoSuggestBox x:Uid="CommentFilter"
                                        QueryIcon="Find"
                                        Text="{x:Bind ViewModel.CommentFilter, Mode=TwoWay}">
                            <i:Interaction.Behaviors>
                                <ic:EventTriggerBehavior EventName="TextChanged">
                                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.ApplyFiltersCommand}" />
                                </ic:EventTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </AutoSuggestBox>
                        <Button x:Uid="ClearFilters"
                                Command="{x:Bind ViewModel.ClearFiltersCommand}"
                                HorizontalAlignment="Right" />
                    </StackPanel>
                </Flyout>
            </AppBarButton.Flyout>
        </AppBarButton>

        <StackPanel Grid.Row="1"
                    Orientation="Vertical">
            <InfoBar x:Uid="FileSaveError"
                     IsOpen="{x:Bind ViewModel.Error, Mode=TwoWay}"
                     Severity="Error" />

            <InfoBar x:Uid="FileChanged"
                     IsOpen="{x:Bind ViewModel.FileChanged, Mode=TwoWay}"
                     Severity="Informational">
                <InfoBar.ActionButton>
                    <Button x:Uid="Reload"
                            Command="{x:Bind ViewModel.ReadHostsCommand}" />
                </InfoBar.ActionButton>
            </InfoBar>
        </StackPanel>

        <ListView x:Name="Entries"
                  Grid.Row="2"
                  ItemsSource="{Binding Entries, Mode=TwoWay}"
                  SelectedItem="{Binding Selected, Mode=TwoWay}"
                  IsItemClickEnabled="True"
                  ItemClick="Entries_ItemClick"
                  CanDragItems="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                  CanReorderItems="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                  AllowDrop="{x:Bind ViewModel.Filtered, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid RightTapped="Grid_RightTapped"
                          Background="Transparent"
                          IsRightTapEnabled="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem x:Uid="Delete"
                                                Icon="Delete"
                                                Click="Delete_Click" />
                                <MenuFlyoutItem x:Uid="Enable" 
                                                Icon="Accept"
                                                Visibility="{Binding Active, Mode=TwoWay, Converter={StaticResource FalseToVisibleConverter}}" 
                                                Click="Enable_Click"/>
                                <MenuFlyoutItem x:Uid="Disable" 
                                                Icon="Clear"
                                                Visibility="{Binding Active, Mode=TwoWay, Converter={StaticResource TrueToVisibleConverter}}"
                                                Click="Disable_Click" />
                                <MenuFlyoutItem x:Uid="Ping" 
                                                Icon="TwoBars"
                                                Click="Ping_Click" />
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                        <ToggleSwitch Grid.Column="0"
                                      IsOn="{Binding Active, Mode=TwoWay}"
                                      OnContent=""
                                      OffContent=""
                                      MinWidth="0">
                        </ToggleSwitch>
                        <SymbolIcon x:Name="PingIcon"
                                    Grid.Column="1"
                                    Visibility="Collapsed">
                            <i:Interaction.Behaviors>
                                <ic:DataTriggerBehavior Binding="{Binding Ping, Mode=OneWay}"
                                                        ComparisonCondition="Equal"
                                                        Value="True">
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Symbol"
                                                             Value="Accept" />
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Visibility"
                                                             Value="Visible" />
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Foreground"
                                                             Value="{StaticResource SystemFillColorSuccessBrush}" />
                                </ic:DataTriggerBehavior>
                                <ic:DataTriggerBehavior Binding="{Binding Ping, Mode=OneWay}"
                                                        ComparisonCondition="Equal"
                                                        Value="False">
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Symbol"
                                                             Value="Clear" />
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Visibility"
                                                             Value="Visible" />
                                    <ic:ChangePropertyAction TargetObject="{Binding ElementName=PingIcon}"
                                                             PropertyName="Foreground"
                                                             Value="{StaticResource SystemFillColorCriticalBrush}" />
                                </ic:DataTriggerBehavior>
                            </i:Interaction.Behaviors>
                        </SymbolIcon>
                        <TextBlock Grid.Column="2"
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="{Binding Address, Mode=OneWay}" />
                        <TextBlock Grid.Column="3"
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="{Binding Hosts, Mode=OneWay}" />
                        <TextBlock Grid.Column="4"
                                   VerticalAlignment="Center"
                                   TextWrapping="Wrap"
                                   Text="{Binding Comment, Mode=OneWay}" />
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <StackPanel Grid.Row="3"
                    Spacing="10"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button x:Uid="AdditionalLines"
                    Style="{StaticResource AccentButtonStyle}"
                    Command="{x:Bind AdditionalLinesDialogCommand}"/>

            <Button x:Uid="AddEntry"
                    Style="{StaticResource AccentButtonStyle}"
                    Command="{x:Bind NewDialogCommand}">
            </Button>
        </StackPanel>

        <ContentDialog x:Uid="MainDialog"
                       x:Name="MainDialog"
                       PrimaryButtonStyle="{StaticResource AccentButtonStyle}"
                       IsPrimaryButtonEnabled="{Binding Valid, Mode=TwoWay}">
            <StackPanel Width="480"
                        Spacing="32"
                        HorizontalAlignment="Stretch">
                <ToggleSwitch x:Uid="Active"
                              IsOn="{Binding Active, Mode=TwoWay}" />

                <TextBox x:Uid="Address"
                         Text="{Binding Address, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBox x:Uid="Hosts"
                         Text="{Binding Hosts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <TextBox x:Uid="Comment"
                         Text="{Binding Comment, Mode=TwoWay}" />
            </StackPanel>
        </ContentDialog>

        <ContentDialog x:Uid="DeleteDialog"
                       x:Name="DeleteDialog"
                       PrimaryButtonStyle="{StaticResource AccentButtonStyle}"
                       PrimaryButtonCommand="{x:Bind DeleteCommand}">
            <TextBlock x:Uid="DeleteDialogAreYouSure" />
        </ContentDialog>

        <ContentDialog x:Uid="AdditionalLinesDialog"
                       x:Name="AdditionalLinesDialog"
                       PrimaryButtonStyle="{StaticResource AccentButtonStyle}"
                       PrimaryButtonCommand="{x:Bind UpdateAdditionalLinesCommand}">
            <StackPanel Width="480"
                        Spacing="32"
                        HorizontalAlignment="Stretch">
                <TextBox x:Uid="AdditionalLinesContent"
                         x:Name="AdditionalLines"
                         Height="300"
                         TextWrapping="Wrap"
                         AcceptsReturn="True" />
            </StackPanel>
        </ContentDialog>
    </Grid>
</Page>
